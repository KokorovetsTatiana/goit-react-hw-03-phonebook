{"version":3,"sources":["components/Phonebook/Phonebook.module.css","components/ContactsList/ContactsList.js","components/Form/Form.js","components/FilterList/FilterList.js","components/Phonebook/Phonebook.js","App.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","ContactsList","contact","ondeleteContact","className","css","phoneList","map","id","name","number","onClick","button","type","initialState","Form","state","onHandleChange","event","target","value","setState","onHandleSubmit","preventDefault","props","addContact","this","onSubmit","form","label","input","onChange","pattern","title","required","Component","FilterList","filter","onFilterHandleChange","Phonebook","contacts","some","item","toLowerCase","alert","prevState","uuidv4","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","includes","visibleContacts","getFilteredContacts","wraper","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,MAAQ,yBAAyB,OAAS,0BAA0B,OAAS,4B,2KCyBhJC,EAvBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACnB,oBAAIC,UAAWC,IAAIC,UAAnB,SACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACX,qBAAaN,UAAWC,IAAIJ,aAA5B,UACE,oBAAGG,UAAWC,IAAII,KAAlB,UAAyBA,EAAzB,OACA,mBAAGL,UAAWC,IAAIK,OAAlB,SAA2BA,IAC3B,wBACEC,QAAS,kBAAMR,EAAgBK,IAC/BJ,UAAWC,IAAIO,OACfC,KAAK,SAHP,sBAHOL,S,uBCFTM,EAAe,CACnBL,KAAM,GACNC,OAAQ,IA2DKK,E,4MAvDbC,M,eAAaF,G,EAEbG,eAAiB,SAAAC,GACf,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBZ,EAAOW,K,EAE1BE,eAAiB,SAAAJ,GACfA,EAAMK,iBACN,EAAKC,MAAMC,WAAW,EAAKT,OAC3B,EAAKK,SAAL,eAAmBP,K,4CAGrB,WACE,MAAyBY,KAAKV,MAAtBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMiB,SAAUD,KAAKJ,eAAgBlB,UAAWC,IAAIuB,KAApD,UACE,wBAAOxB,UAAWC,IAAIwB,MAAtB,iBAEE,uBACEzB,UAAWC,IAAIyB,MACfjB,KAAK,OACLO,MAAOX,EACPsB,SAAUL,KAAKT,eACfR,KAAK,OACLuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAO9B,UAAWC,IAAIwB,MAAtB,mBAEE,uBACEzB,UAAWC,IAAIyB,MACfjB,KAAK,MACLJ,KAAK,SACLW,MAAOV,EACPqB,SAAUL,KAAKT,eACfe,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,OAGZ,wBAAQ9B,UAAWC,IAAIO,OAAQC,KAAK,SAApC,gC,GA3CWsB,a,QCiBJC,EAvBI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,qBAI5B,OACE,wBAAOlC,UAAWC,IAAIwB,MAAtB,kCAEE,uBACEzB,UAAWC,IAAIyB,MACfjB,KAAK,OACLO,MAAOiB,EACPN,SAViB,SAAAb,GACrBoB,EAAqBpB,EAAMC,OAAOC,QAU9BX,KAAK,eC0EE8B,E,4MAhFbvB,MAAQ,CACNwB,SAAU,CACR,CAAEhC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhD2B,OAAQ,I,EAgBVZ,WAAa,SAAAvB,GAET,EAAKc,MAAMwB,SAASC,MAClB,SAAAC,GAAI,OAAIA,EAAKjC,KAAKkC,gBAAkBzC,EAAQO,KAAKkC,iBAGnDC,MAAM,4DAGR,EAAKvB,UAAS,SAAAwB,GAAS,MAAK,CAC1BL,SAAS,GAAD,mBAAMK,EAAUL,UAAhB,4BAA+BtC,GAA/B,IAAwCM,GAAIsC,uB,EAIxDC,cAAgB,SAAAC,GACd,EAAK3B,UAAS,SAAAwB,GAAS,MAAK,CAC1BL,SAAUK,EAAUL,SAASH,QAAO,SAAAnC,GAAO,OAAIA,EAAQM,KAAOwC,U,EAUlEV,qBAAuB,SAAAD,GACrB,EAAKhB,SAAS,CAAEgB,Y,uDAxClB,WACE,IAAMG,EAAWS,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMb,GAC9BW,GACFzB,KAAKL,SAAS,CAAEmB,SAAUW,M,gCAG9B,SAAmBG,EAAWT,GACxBnB,KAAKV,MAAMwB,WAAaK,EAAUL,UACpCS,aAAaM,QAAQ,WAAYH,KAAKI,UAAU9B,KAAKV,MAAMwB,a,iCAwB/D,WAAuB,IAAD,OACpB,OAAOd,KAAKV,MAAMwB,SAASH,QAAO,SAAAnC,GAAO,OACvCA,EAAQO,KAAKkC,cAAcc,SAAS,EAAKzC,MAAMqB,OAAOM,oB,oBAQ1D,WACE,IAAMe,EAAkBhC,KAAKiC,sBACrBtB,EAAWX,KAAKV,MAAhBqB,OACR,OACE,sBAAKjC,UAAWC,IAAIuD,OAApB,UACE,2CACA,cAAC,EAAD,CAAMnC,WAAYC,KAAKD,aACvB,0CACA,cAAC,EAAD,CACEY,OAAQA,EACRC,qBAAsBZ,KAAKY,uBAG7B,cAAC,EAAD,CACEpC,QAASwD,EACTvD,gBAAiBuB,KAAKqB,uB,GArERZ,aCET0B,EANH,WACV,OACE,cAAC,EAAD,KCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BnE,EAAOC,QAAU,CAAC,UAAY,gCAAgC,aAAe,mCAAmC,OAAS,6BAA6B,KAAO,2BAA2B,OAAS,gC","file":"static/js/main.56011fff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Phonebook_form__xIXqd\",\"label\":\"Phonebook_label__2NPJX\",\"input\":\"Phonebook_input__1S5Lz\",\"button\":\"Phonebook_button__23O26\",\"wraper\":\"Phonebook_wraper__2OWLA\"};","import css from './ContactsList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ contact, ondeleteContact }) => (\r\n  <ul className={css.phoneList}>\r\n    {contact.map(({ id, name, number }) => (\r\n      <li key={id} className={css.ContactsList}>\r\n        <p className={css.name}>{name}:</p>\r\n        <p className={css.number}>{number}</p>\r\n        <button\r\n          onClick={() => ondeleteContact(id)}\r\n          className={css.button}\r\n          type=\"button\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contact: PropTypes.array,\r\n  ondeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from '../Phonebook/Phonebook.module.css';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass Form extends Component {\r\n  state = { ...initialState };\r\n\r\n  onHandleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  onHandleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.onHandleSubmit} className={css.form}>\r\n        <label className={css.label}>\r\n          Name\r\n          <input\r\n            className={css.input}\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.onHandleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={css.label}>\r\n          Number\r\n          <input\r\n            className={css.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.onHandleChange}\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={css.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default Form;","import css from '../Phonebook/Phonebook.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterList = ({ filter, onFilterHandleChange }) => {\r\n  const onHandleChange = event => {\r\n    onFilterHandleChange(event.target.value);\r\n  };\r\n  return (\r\n    <label className={css.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onHandleChange}\r\n        name=\"filter\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilterList.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onFilterHandleChange: PropTypes.func,\r\n};\r\n\r\nexport default FilterList;","import { Component } from 'react';\r\nimport ContactsList from '../ContactsList/ContactsList';\r\nimport Form from '../Form/Form';\r\nimport css from './Phonebook.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport FilterList from '../FilterList/FilterList';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = contact => {\r\n    if (\r\n      this.state.contacts.some(\r\n        item => item.name.toLowerCase() === contact.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert('This contact already exists!! Try one more time, please!');\r\n      return;\r\n    }\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, { ...contact, id: uuidv4() }],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  getFilteredContacts() {\r\n    return this.state.contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\r\n    );\r\n  }\r\n\r\n  onFilterHandleChange = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getFilteredContacts();\r\n    const { filter } = this.state;\r\n    return (\r\n      <div className={css.wraper}>\r\n        <h1>Phonebook</h1>\r\n        <Form addContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <FilterList\r\n          filter={filter}\r\n          onFilterHandleChange={this.onFilterHandleChange}\r\n        />\r\n\r\n        <ContactsList\r\n          contact={visibleContacts}\r\n          ondeleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPhonebook.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nexport default Phonebook;","import React from 'react';\nimport Phonebook from './components/Phonebook/Phonebook';\n\n\nconst App = () => {\n  return (\n    <Phonebook />\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneList\":\"ContactsList_phoneList__vEohK\",\"ContactsList\":\"ContactsList_ContactsList__3MuKA\",\"button\":\"ContactsList_button__DeCow\",\"name\":\"ContactsList_name__1Q7gb\",\"number\":\"ContactsList_number__2iq-x\"};"],"sourceRoot":""}